{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","role","htmlfor","Textform","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","console","log","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","split","join","length","defaultProps","aboutText","Alert","alert","word","lower","charAt","slice","capitalize","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","document","body","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","getElementById"],"mappings":"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","file":"static/js/main.715ca213.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n// import {Link} from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/about\">{props.aboutText}</a>\r\n            </li> */}\r\n\r\n          </ul>\r\n          {/* <form className=\"d-flex\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n              <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n            </form> */}\r\n          <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`} >\r\n            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n              <label className=\"form-check-label\" htmlfor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n          </div>\r\n      </div>\r\n    </div>\r\n    </nav >\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n  title: 'Set title here',\r\n  aboutText: 'About'\r\n}\r\n\r\n","import React, { useState } from 'react';\r\n\r\n\r\n\r\nexport default function Textform(props) {\r\n    const handleUpclick = () => {\r\n        console.log('Uppercase was clicked');\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to uppercase\", \"success\");\r\n    }\r\n    const handleDownclick = () => {\r\n        console.log('Lowercase was clicked');\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to lowercase\", \"success\");\r\n    }\r\n    const handleClearclick = () => {\r\n        console.log('Clear was clicked');\r\n        let newText = \"\";\r\n        setText(newText)\r\n        props.showAlert(\"Text Cleared\", \"success\");\r\n    }\r\n    const handleOnChange = (event) => {\r\n        console.log('OnChange was clicked');\r\n        setText(event.target.value);\r\n    }\r\n    const handleExtraSpaces = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Extra Spaces Removed\", \"success\");\r\n    }\r\n\r\n    const [text, setText] = useState('');\r\n    return (\r\n        <>\r\n            <div className=\"container\" style={{ color: props.mode === 'dark' ? 'white' : 'black' }}>\r\n                <h2>{props.heading}</h2>\r\n                <div className=\"mb-3\">\r\n                    <textarea className=\"form-control \" value={text} onChange={handleOnChange} style={{ backgroundColor: props.mode === 'dark' ? 'grey' : 'white', color: props.mode === 'dark' ? 'white' : 'black' }} id=\"mybox\" rows=\"8\" ></textarea>\r\n                </div>\r\n                <button className=\"btn btn-primary mx-3\" onClick={handleUpclick}>Convert to UpperCase</button>\r\n                <button className=\"btn btn-primary mx-3\" onClick={handleDownclick}>Convert to LowerCase</button>\r\n                <button className=\"btn btn-primary mx-3\" onClick={handleClearclick}>Clear Text</button>\r\n                <button className=\"btn btn-primary mx-3 my-2\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n\r\n            </div>\r\n            <div className=\"container my-4 \" style={{ color: props.mode === 'dark' ? 'white' : 'black' }}>\r\n                <h1>Your Text Summary</h1>\r\n                <p>{text.split(\" \").length} Words and {text.length} Characters</p>\r\n                <p><h2>{0.008 * text.length} Minute Read</h2></p>\r\n                <h2>Preview</h2>\r\n                <p>{text.length > 0 ? text : \"Enter text to preview\"}</p>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n\r\n        props.alert && <div>\r\n            <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong> {capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","\n\nimport './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport Textform from './components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#374263';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n\n    }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n\n    }\n  }\n\n  return (\n    <>\n\n\n      {/* <Navbar title=\"Textutility\" aboutText=\"About Textutility\" /> */}\n      {/* <Router> */}\n        <Navbar title=\"Textutility\" mode={mode} toggleMode={toggleMode} />\n        < Alert alert={alert} />\n        <div className=\"container my-3\" >\n          {/* <Switch>\n            <Route exact path=\"/about\">\n              <About />\n            </Route>\n            <Route exact path=\"/\"> */}\n              <Textform showAlert={showAlert} heading=\"Enter the text below\" mode={mode} />\n            {/* </Route>\n          </Switch> */}\n        </div>\n      {/* </Router> */}\n     \n     \n\n    </>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}